(function () {
    var synthesize = require('synthesize'),
        assert = require('assert');

    function Example() {
        console.dir(this);
        synthesize(this, 'readwrite', 'rwTest', null);
        synthesize(this, 'readwrite', 'rwTest', null, undefined);
        synthesize(this, 'readwrite', 'rwTest', null, function (argument) {
            return true;
        });
        synthesize(this, 'readonly', 'roTest', null);
        synthesize(this, 'readonly', 'roTest', null, undefined);
        synthesize(this, 'readonly', 'roTest', null, function (argument) {
            return true;
        });

        try {
            synthesize(this, 'readwrite', 'rwTest', null, function (argument) {
                return NaN;
            });
        } catch (e) {
            console.log(e.message);
        }
        try {
            synthesize(this, 'readonly', 'roTest', 1, function (argument) {
                return NaN;
            });
        } catch (e) {
            console.log(e.message);
        }
        assert.strictEqual((this.rwTest !== undefined), true, 'rwTest should synthesize a getter.');
        assert.strictEqual((this.setRwTest !== undefined), true, 'rwTest should synthesize a setter.');
        assert.strictEqual((this.roTest !== undefined), true, 'roTest should synthesize a getter.');
        assert.strictEqual((this.setRoTest === undefined), true, 'roTest should not synthesize a setter.');
        assert.strictEqual((this.setRwTest(-1).rwTest() === -1), true, 'rwTest validator did not work.');
        assert.strictEqual((this.roTest() === null), true, 'roTest validator did not work.');
        try {
            synthesize(this, 'readwrite', 'rwTest', 1, NaN);
        } catch (e) {
            console.log(e.message);
        }
        try {
            synthesize(this, 'readonly', 'roTest', 1, NaN);
        } catch (e) {
            console.log(e.message);
        }
        assert.strictEqual((this.setRwTest(-1).rwTest() === -1), true, 'rwTest validator did not work.');
        assert.strictEqual((this.roTest() === null), true, 'roTest validator did not work.');
        synthesize(this, 'readwrite', 'rwTest');
        synthesize(this, 'readonly', 'roTest');
        assert.strictEqual((this.setRwTest(-1).rwTest() === -1), true, 'rwTest validator should not exist.');
        assert.strictEqual((this.roTest() === undefined), true, 'roTest value was modified before being closured.');
        try {
            synthesize(this, 'readwrite', '');
        } catch (e) {
            console.log(e.message);
        }
        try {
            synthesize(this, 'readwrite');
        } catch (e) {
            console.log(e.message);
        }
        try {
            synthesize(this);
        } catch (e) {
            console.log(e.message);
        }
        console.dir(this);
    }

    console.log('Testing instantiation of an Example object using accessor synthesis.');
    new Example();
    console.log('Everything passed.');
})();
