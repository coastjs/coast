/**
 * Module dependencies.
 */
var common = require('./index.js'),
    affordance = common.affordance,
    affordances = common.affordances,
    decoder = common.decoder,
    encoder = common.encoder,
    input = common.input,
    naval = common.naval;

/**
 * Create an instance of Encoder and Decoder.
 */
var encoderInstance = encoder(naval),
    decoderInstance = decoder(naval);

/*
 api 'api.example.com'
 protocol 'HTTP'
 meta 'Host': 'api.example.com'
 req 'entry', 'GET', '/'
 req 'get-users', 'GET', '/users'
 req 'get-user', 'GET', '/users/:user'
 req 'del-user', 'DELETE', '/users/:user'
 req 'put-user', 'PUT', '/users/:user'
 meta 'Content-Type': 'application/vnd.example.user+json'
 input 'firstname', '', ['text/plain'], true
 res 'put-user', 201, [
 'entry'
 'get-users'
 'get-user'
 'del-user'
 'put-user'
 ]
 media 'NavAL'
 */

/**
 * Create some hypermedia, and attempt to serialize it.
 */
var affordancesInstance =
        affordances('api.example.com')
            .setMetadata
            (
                {
                    'Host':'api.example.com',
                    'Accept':'multipart/nav-data'
                }
            )
            .addAffordance
            (
                affordance('entry', 'GET', '/')
            )
            .addAffordance
            (
                affordance('get-users', 'GET', '/users')
            )
            .addAffordance
            (
                affordance('del-user', 'DELETE', '/users/:user')
            )
            .addAffordance
            (
                affordance('put-user', 'PUT', '/users/:user')
                    .setMetadata
                    (
                        {
                            'Content-Type':'application/vnd.example.user+json'
                        }
                    )
                    .addInput(input('first_name', '', ['text/plain'], true))
                    .addInput(input('last_name', '', ['text/plain'], true))
            ),
    affordanceInstance =
        affordance('entry', 'GET', '/');

console.dir(encoderInstance.encode(null));
console.dir(encoderInstance.encode(affordancesInstance));
console.dir(decoderInstance.decode(null));
console.dir(decoderInstance.decode(encoderInstance.encode(affordancesInstance)));
console.dir('InstanceOf Affordance: '
    + affordance.isPrototypeOf(decoderInstance.decode(encoderInstance.encode(affordanceInstance))));
console.dir('InstanceOf Affordances: '
    + affordances.isPrototypeOf(decoderInstance.decode(encoderInstance.encode(affordancesInstance))));
