/**
 * Module dependencies.
 */
var common = require('./index.js'),
    affordance = common.affordance,
    affordances = common.affordances,
    decoder = common.decoder,
    encoder = common.encoder,
    hypermediator = common.hypermediator,
    input = common.input,
    naval = common.naval;

/*
 api 'api.example.com'
 protocol 'HTTP'
 meta 'Host': 'api.example.com'
 req 'entry', 'GET', '/'
 req 'get-users', 'GET', '/users'
 req 'get-user', 'GET', '/users/:user'
 req 'del-user', 'DELETE', '/users/:user'
 req 'put-user', 'PUT', '/users/:user'
 meta 'Content-Type': 'application/vnd.example.user+json'
 input 'firstname', '', ['text/plain'], true
 res 'put-user', 201, [
 'entry'
 'get-users'
 'get-user'
 'del-user'
 'put-user'
 ]
 media 'NavAL'
 */
var affordancesInstance =
        affordances('Hapi API')
            .setMetadata
            (
                {
                    'Host':'api.hapi.co',
                    'Accept':'multipart/nav-data'
                }
            )
            .addAffordance
            (
                affordance('entry', 'GET', '/')
            )
            .addAffordance
            (
                affordance('get-users', 'GET', '/users')
            )
            .addAffordance
            (
                affordance('del-user', 'DELETE', '/users/{user}')
            )
            .addAffordance
            (
                affordance('put-user', 'PUT', '/users/{user}')
                    .setMetadata
                    (
                        {
                            'Content-Type':'application/vnd.hapi.co.user+json'
                        }
                    )
                    .addInput(input('first_name'))
                    .addInput(input('last_name'))
            )
            .addAffordance
            (
                affordances('api-collection')
                    .setMetadata
                    (
                        {
                            'Accept-Charset':'utf-8'
                        }
                    )
                    .addAffordance
                    (
                        affordances('merchants-api')
                            .addAffordance
                            (
                                affordance('get-merchants', 'GET', '/merchants')
                            )
                            .addAffordance
                            (
                                affordance('get-merchant', 'GET', '/merchants/{merchant}')
                            )
                    )
                    .addAffordance
                    (
                        affordances('widgets-api')
                            .addAffordance
                            (
                                affordance('get-widgets', 'GET', '/widgets')
                            )
                            .addAffordance
                            (
                                affordance('get-widget', 'GET', '/widgets/{widget}')
                            )
                    )
                    .addAffordance
                    (
                        affordances('other-widgets-api')
                            .addAffordance
                            (
                                /**
                                 * Identifier collision with previous get-widgets.
                                 */
                                affordance('get-widgets', 'GET', '/otherwidgets')
                            )
                    )
            )
            .addAffordance
            (
                affordances('')
            )
            .addAffordance
            (
                affordances('Twitter API')
                    .setMetadata
                    (
                        {
                            'Host':'api.twitter.com',
                            'Accept':'multipart/nav-data'
                        }
                    )
                    .addAffordance
                    (
                        affordance('twitter-entry', 'GET', '/')
                    )
                    .addAffordance
                    (
                        affordance('twitter-put-tweet', 'PUT', '/tweets/{tweet}')
                            .setMetadata
                            (
                                {
                                    'Content-Type':'application/vnd.twitter.com.tweet+json'
                                }
                            )
                            .addInput(input('text'))
                    )
            ),
    affordanceInstance =
        affordance('entry', 'GET', '/'),
    emptyAffordancesInstance =
        affordances();

var encoderInstance = encoder(naval),
    decoderInstance = decoder(naval),
    hypermediatorInstance =
        hypermediator()
            .setEncoder(encoder());

console.dir('TEST 1');
console.dir(encoderInstance.encode(null));
console.dir('TEST 2');
console.dir(encoderInstance.encode(affordancesInstance));
console.dir('TEST 3');
console.dir(encoderInstance.encode(affordanceInstance));
console.dir('TEST 4');
console.dir(decoderInstance.decode(null));
console.dir('TEST 5');
console.dir(decoderInstance.decode(''));
console.dir('TEST 6');
console.dir(decoderInstance.decode('1'));
console.dir('TEST 7');
console.log(JSON.stringify(decoderInstance.decode(encoderInstance.encode(affordancesInstance)), null, '  '));
console.dir('TEST 8');
console.log(JSON.stringify(decoderInstance.decode(encoderInstance.encode(affordanceInstance)), null, '  '));
console.dir('TEST 9');
console.dir(affordances.isPrototypeOf(decoderInstance.decode(encoderInstance.encode(affordancesInstance))));
console.dir('TEST 10');
console.dir(affordance.isPrototypeOf(decoderInstance.decode(encoderInstance.encode(affordanceInstance))));
console.dir('TEST 11');
console.dir(affordance.isPrototypeOf(decoderInstance.decode(encoderInstance.encode(affordancesInstance))));
console.dir('TEST 12');
console.dir(affordances.isPrototypeOf(decoderInstance.decode(encoderInstance.encode(affordanceInstance))));
console.dir('TEST 13');
console.dir(affordancesInstance.copyAffordanceById());
console.dir('TEST 14');
console.dir(affordancesInstance.copyAffordanceById(''));
console.dir('TEST 15');
console.dir(affordancesInstance.copyAffordanceById('entry'));
console.dir('TEST 16');
console.dir(affordancesInstance.copyAffordanceById('get-users'));
console.dir('TEST 17');
console.dir(affordancesInstance.copyAffordanceById('del-user'));
console.dir('TEST 18');
console.dir(affordancesInstance.copyAffordanceById('put-user'));
console.dir('TEST 19');
console.dir(affordancesInstance.copyAffordanceById('api-collection'));
console.dir('TEST 20');
console.dir(affordancesInstance.copyAffordanceById('merchants-api'));
console.dir('TEST 21');
console.dir(affordancesInstance.copyAffordanceById('get-merchants'));
console.dir('TEST 22');
console.dir(affordancesInstance.copyAffordanceById('get-merchant'));
console.dir('TEST 23');
console.dir(affordancesInstance.copyAffordanceById('widgets-api'));
console.dir('TEST 24');
console.dir(affordancesInstance.copyAffordanceById('get-widgets'));
console.dir('TEST 25');
console.dir(affordancesInstance.copyAffordanceById('get-widget'));
console.dir('TEST 26');
console.dir(affordancesInstance.copyAffordanceById('get-widge'));
console.dir('TEST 27');
console.dir(affordancesInstance.copyAffordanceById('twitter-entry'));
console.dir(affordancesInstance.copyAffordanceById('twitter-entry'));
console.dir(affordancesInstance.copyAffordanceById('twitter-entry') === affordancesInstance.copyAffordanceById('twitter-entry'));
console.dir('TEST 28');
console.dir(affordancesInstance.copyAffordanceById('twitter-put-tweet'));
console.dir(affordancesInstance.copyAffordanceById('twitter-put-tweet'));
console.dir(affordancesInstance.copyAffordanceById('twitter-put-tweet') === affordancesInstance.copyAffordanceById('twitter-put-tweet'));
console.dir('TEST 29');
console.dir(affordancesInstance.copyAffordanceById('Twitter API'));
console.dir('TEST 30');
console.log(JSON.stringify(decoderInstance.decode(encoderInstance.encode(affordancesInstance)), null, '  '));
console.dir('TEST 31');
console.dir(affordancesInstance.getCount());
console.dir(affordancesInstance.copyAffordanceById('api-collection').getCount());
console.dir(affordancesInstance.copyAffordanceById('').getCount());
try {
    console.dir(affordancesInstance.copyAffordanceById('entry').getCount());
} catch (e) {
    console.dir(e.message);
}
console.dir('TEST 32');
console.dir(naval.canEncode());
console.dir(naval.canDecode());
console.dir(require('./lib/plugin.js')().canEncode());
console.dir(require('./lib/plugin.js')().canDecode());
console.dir('TEST 33');
console.dir(hypermediatorInstance);
console.dir(hypermediatorInstance.mediate());
console.dir(hypermediatorInstance.mediate([]));
console.dir(hypermediatorInstance.mediate(['entr']));
console.dir(hypermediatorInstance.mediate(['entry']));
console.dir(hypermediatorInstance.mediate([
    'entry',
    'get-users',
    'del-user',
    'put-user'
]));
console.dir('TEST 34');
console.dir
    (
        hypermediatorInstance
            .setApi(emptyAffordancesInstance)
    );
console.dir(hypermediatorInstance.mediate());
console.dir(hypermediatorInstance.mediate([]));
console.dir(hypermediatorInstance.mediate(['entr']));
console.dir(hypermediatorInstance.mediate(['entry']));
console.dir(hypermediatorInstance.mediate([
    'entry',
    'get-users',
    'del-user',
    'put-user'
]));
console.dir('TEST 35');
console.dir
    (
        hypermediatorInstance
            .setApi(affordancesInstance)
    );
console.dir(hypermediatorInstance.mediate());
console.dir(hypermediatorInstance.mediate([]));
console.dir(hypermediatorInstance.mediate(['entr']));
console.dir(hypermediatorInstance.mediate(['entry']));
console.dir(hypermediatorInstance.mediate([
    'entry',
    'get-users',
    'del-user',
    'put-user'
]));
console.dir('TEST 36');
console.dir
    (
        hypermediatorInstance
            .setEncoder(encoder(naval))
    );
console.dir(hypermediatorInstance.mediate());
console.dir(hypermediatorInstance.mediate([]));
console.dir(hypermediatorInstance.mediate(['entr']));
console.log(hypermediatorInstance.mediate(['entry']));
console.log(hypermediatorInstance.mediate([
    'entry',
    'get-users',
    'del-user',
    'put-user'
]));
console.log(hypermediatorInstance.mediate([
    "entry",
    "get-users",
    "del-user",
    "put-user",
    "get-merchants",
    "get-merchant",
    "merchants-api",
    "get-widgets",
    "get-widget",
    "widgets-api",
    "get-widgets",
    "other-widgets-api",
    "api-collection",
    "",
    "twitter-entry",
    "twitter-put-tweet",
    "Twitter API"
]));
console.dir('END TESTS');
